#include <stdio.h>

#define SIZE 100

void matrixMultiplication(int matA[][SIZE], int matB[][SIZE], int res[][SIZE], int rowsA, int colsA, int colsB) {
    int i, j, k;
    
    for (i = 0; i < rowsA; i++) {
        for (j = 0; j < colsB; j++) {
            res[i][j] = 0;
            
            for (k = 0; k < colsA; k++) {
                res[i][j] += matA[i][k] * matB[k][j];
            }
        }
    }
}

void displayMatrix(int matrix[][SIZE], int rows, int cols) {
    int i, j;
    
    for (i = 0; i < rows; i++) {
        for (j = 0; j < cols; j++) {
            printf("%d ", matrix[i][j]);
        }
        printf("\n");
    }
}

int main() {
    int matA[SIZE][SIZE], matB[SIZE][SIZE], res[SIZE][SIZE];
    int rowsA, colsA, rowsB, colsB;
    int i, j;
    
    printf("Enter the number of rows and columns for matrix A: ");
    scanf("%d %d", &rowsA, &colsA);
    
    printf("Enter the elements of matrix A:\n");
    for (i = 0; i < rowsA; i++) {
        for (j = 0; j < colsA; j++) {
            scanf("%d", &matA[i][j]);
        }
    }
    
    printf("Enter the number of rows and columns for matrix B: ");
    scanf("%d %d", &rowsB, &colsB);
    
    printf("Enter the elements of matrix B:\n");
    for (i = 0; i < rowsB; i++) {
        for (j = 0; j < colsB; j++) {
            scanf("%d", &matB[i][j]);
        }
    }
    
    if (colsA != rowsB) {
        printf("Matrix multiplication not possible!\n");
        return 0;
    }
    
    matrixMultiplication(matA, matB, res, rowsA, colsA, colsB);
    
    printf("Resultant matrix:\n");
    displayMatrix(res, rowsA, colsB);
    
    return 0;
}
